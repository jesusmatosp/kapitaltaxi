<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<http auto-config="true">
		<intercept-url pattern="/seguridad/update**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<intercept-url pattern="/" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		<intercept-url pattern="/personal/personas**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERVISOR', 'ROLE_PROGRAMADOR')" />
		<intercept-url pattern="/index**" access="permitAll" />
		
		
		<!-- 		<logout logout-success-url="/welcome" />	 -->
		<form-login 
			login-page="/login"
			login-processing-url="/j_spring_security_check"
			default-target-url="/index"
			authentication-failure-url="/login?error"
			username-parameter="username"
			password-parameter="password"
			
		/>
		<logout logout-url="/j_spring_security_logout"/>
		<csrf disabled="true"/> 
	</http>

	<authentication-manager>
	  <authentication-provider>
	    <!-- <user-service>
			<user name="jmatos@jmatostech.com" password="123456" authorities="ROLE_USER" />  -->
			<jdbc-user-service data-source-ref="dataSource"
		  		users-by-username-query=
		    		"SELECT c_usuario as username, CAST(AES_DECRYPT(c_password, 'llave') AS CHAR(50)) as password, c_estado as enabled FROM TBL_USUARIO WHERE c_usuario =? "
		  		authorities-by-username-query=
		    		"SELECT u.c_usuario as username, r.c_nom_rol as role FROM tbl_usuario_rol ur, tbl_usuario u, tbl_rol r
							where ur.n_id_rol = r.n_id_rol and ur.n_id_usuario = u.n_id_usuario
    					and u.c_usuario =? " />
	    <!-- </user-service>  -->
	  </authentication-provider>
	</authentication-manager>

</beans:beans>